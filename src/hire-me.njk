---
layout: base.njk
title: "Hire Wessley Nyakanyanga - Software Developer"
description: "Contact me for software development projects. Let's collaborate on your next digital solution."
keywords: "hire developer, software development, freelance developer, coding services"
ogTitle: "Hire Wessley Nyakanyanga - Software Developer"
ogDescription: "Contact me for software development projects and services"
ogImage: "{{ '/' | url }}assets/img/profile.png"
ogUrl: "https://wessleyn.me/hire-me"
canonical: "https://wessleyn.me/hire-me"
showHireButton: false
sectionClass: "my-5"
sidebarClass: "col-lg-3"
profileImgClass: "col-sm-4"
profileInfoClass: "col-sm-8 order-sm-first order-lg-last"
contentClass: "col-lg-8 offset-lg-1"
---

{% block head %}
<!-- Cloudflare Turnstile Captcha -->
<script src="https://challenges.cloudflare.com/turnstile/v0/api.js" async defer></script>
{% endblock %}

{% block breadcrumb %}
<!-- No breadcrumb for hire-me page -->
{% endblock %}

{% block content %}
<h2 class="fs-3 fw-bold terminal-cursor">$ ./submit_project.sh</h2>
<p class="mb-4">Tell me about your project and I'll get back to you as soon as possible.</p>
<div class="row">
    <div class="col-lg-9">
        <form action="https://formspree.io/f/xdkeveyn" method="POST">
            <div class="mb-3"><label class="form-label">Your Name</label><input class="form-control" type="text"
                    id="name" name="name" required></div>
            <div class="mb-3"><label class="form-label">Email Address</label><input class="form-control" type="email"
                    id="email" name="email" required>
            </div>
            <div class="mb-3"><label class="form-label">Project Details</label><textarea class="form-control"
                    id="message" name="message" rows="6" placeholder="Message" required></textarea></div>
            <div class="mb-3"><label class="form-label">Date</label><input class="form-control" id="date" name="date"
                    type="date"></div>
            <div class="mb-4 ">
                <!-- Cloudflare Turnstile Captcha element -->
                <div class="cf-turnstile" data-sitekey="0x4AAAAAABMxM4cbQf-x_3Cs" data-theme="dark"></div>
            </div>
            <div><button class="btn btn-lg btn-primary-dragient terminal-button" type="submit">run
                    ./hire_me.sh</button></div>
        </form>
        <div class="mt-4 form-success" style="display: none;">
            <div class="alert alert-success terminal-success">
                <h4 class="fw-bold">$ echo "Form submitted successfully!"</h4>
                <p>I'll respond to your inquiry as soon as possible.</p>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block scripts %}
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Add special styling to form elements for terminal look
        const formElements = document.querySelectorAll('input, textarea');
        formElements.forEach(element => {
            element.addEventListener('focus', function () {
                this.style.boxShadow = '0 0 5px rgba(74, 246, 38, 0.5)';
                this.style.borderColor = 'var(--bs-primary)';
            });

            element.addEventListener('blur', function () {
                this.style.boxShadow = 'none';
            });
        });

        // Form submission with Formspree
        const form = document.querySelector('form');
        const formSuccess = document.querySelector('.form-success');

        if (form) {
            form.addEventListener('submit', function (event) {
                event.preventDefault();

                // Check if the form has a valid Turnstile response
                const turnstileResponse = document.querySelector('[name="cf-turnstile-response"]');
                if (!turnstileResponse || !turnstileResponse.value) {
                    alert('Please complete the captcha');
                    return;
                }

                // Get form data
                const data = new FormData(form);

                // Submit the form to Formspree
                fetch(form.action, {
                    method: form.method,
                    body: data,
                    headers: {
                        'Accept': 'application/json'
                    }
                })
                    .then(response => {
                        if (response.ok) {
                            // Show success message
                            form.style.display = 'none';
                            formSuccess.style.display = 'block';

                            // Smooth scroll to the success message
                            const scrollOptions = {
                                behavior: 'smooth',
                                block: 'center'
                            };

                            // First try scrollIntoView if supported
                            if (formSuccess.scrollIntoView) {
                                formSuccess.scrollIntoView(scrollOptions);
                            } else {
                                // Fallback for older browsers
                                const rect = formSuccess.getBoundingClientRect();
                                const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
                                const targetY = rect.top + scrollTop - (window.innerHeight / 4);

                                window.scrollTo({
                                    top: targetY,
                                    behavior: 'smooth'
                                });
                            }

                            // Reset form fields
                            form.reset();

                            // Reset Turnstile
                            if (typeof turnstile !== 'undefined') {
                                turnstile.reset();
                            }

                            // Add a terminal typing effect to the success message
                            const successHeading = formSuccess.querySelector('h4');
                            if (successHeading) {
                                const originalText = successHeading.textContent;
                                successHeading.textContent = "";

                                let i = 0;
                                function typeSuccessMessage() {
                                    if (i < originalText.length) {
                                        successHeading.textContent += originalText.charAt(i);
                                        i++;
                                        setTimeout(typeSuccessMessage, 50);
                                    }
                                }

                                setTimeout(typeSuccessMessage, 300);
                            }
                        } else {
                            response.json().then(data => {
                                if (Object.hasOwnProperty.call(data, 'errors')) {
                                    const errorMsg = data["errors"].map(error => error["message"]).join(", ");
                                    alert("Form submission error: " + errorMsg);
                                } else {
                                    alert("Oops! There was a problem submitting your form");
                                }
                            });
                        }
                    })
                    .catch(error => {
                        alert("Oops! There was a problem submitting your form");
                        console.error(error);
                    });
            });
        }
    });
</script>
{% endblock %}